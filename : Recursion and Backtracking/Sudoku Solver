class Solution {
public:
 
    void solveSudoku(vector<vector<char>>& board) {
        // int row[9][9]={0};
        // int col[9][9]={0};
        // int grid[9][9]={0};
        solve(board);
    }
    bool solve(vector<vector<char>>& board)
    {
        for(int i=0;i<9;i++)
        {
            for(int j=0;j<9;j++)
            {
                if(board[i][j]=='.')
                {
                    for(char a='1';a<='9';a++)
                    {
                        if(valid(i,j,board,a)){
                        board[i][j]=a;
                        if(solve(board)==true)
                        return true;
                        else
                        board[i][j]='.';
                    }
                }
                return false;
            }
        }
        }
        return true;
    }
    bool valid(int r,int c,vector<vector<char>>& board,char a)
    {
        for(int i=0;i<9;i++)
        {
            if(board[r][i]==a)
            return 0;
            if(board[i][c]==a)
            return 0;

           if( board[3*(r/3)+i/3][3*(c/3)+i%3]==a)
            return 0;
        }
        return 1;
    }
};
