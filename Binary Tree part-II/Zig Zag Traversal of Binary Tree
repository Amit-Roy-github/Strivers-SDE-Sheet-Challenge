class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
          vector<vector<int>>ans;
          if(root==NULL)
          return ans;
        int cnt=0; // to keep track of all odd index level in Tree
        queue<TreeNode*>q;
        q.push(root);
        while(1)
        {
          int size=q.size();
          if(!size) return ans;// while loop will not run infinitely whenever size==0 it will return ans;
          vector<int>temp;
          while(size!=0)
          {
              TreeNode* curr=q.front();
              q.pop();
              if(curr->left) q.push(curr->left);
              if(curr->right) q.push(curr->right);
              temp.push_back(curr->val);
              --size;
          }
          if(cnt%2) // reversing all the odd before pushing in ans vector
          {
              reverse(temp.begin(),temp.end());
          }
          ans.push_back(temp);
          ++cnt;
        }
        return ans;
    }
};
