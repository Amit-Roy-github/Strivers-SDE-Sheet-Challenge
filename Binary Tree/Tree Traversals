vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    // Write your code here.
    stack<pair<BinaryTreeNode<int> *,int>>s;
    s.push({root,1});

    vector<int>pre,post,ino;
    if(root==NULL)goto jump;

    while(!s.empty())
    {
        auto it=s.top();s.pop();
        if(it.second==1)
        {
            pre.push_back(it.first->data);
            it.second++;
            s.push(it);

            if(it.first->left)
            s.push({it.first->left,1});
        }
        else if(it.second==2)
        {
            ino.push_back(it.first->data);
            it.second++;
            s.push(it);
            if(it.first->right)
            s.push({it.first->right,1});
        }
        else
        {
            post.push_back(it.first->data);
        }
    }
    jump:
    return {ino,pre,post};
}
