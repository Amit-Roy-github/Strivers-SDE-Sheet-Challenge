 class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int,map<int,multiset<int>>>m;
        queue<pair<TreeNode*,pair<int,int>>>q;
        q.push({root,{0,0}});
        while(!q.empty())
        {
            int n=q.size();
            for(int i=0;i<n;i++)
            {
                int line=q.front().second.first;
                int l=q.front().second.second;
                root=q.front().first;
                q.pop();
                m[line][l].insert(root->val);
                if(root->left)
                q.push({root->left,{line-1,l+1}});
                if(root->right)
                q.push({root->right,{line+1,l+1}});
            }
        }
        vector<vector<int>>ans;
        for(auto i:m)
        {
            vector<int>v;
            for(auto j:i.second)
            {
                v.insert(v.end(),j.second.begin(),j.second.end());
            }
            ans.push_back(v);
        }
        return ans;
    }
};
